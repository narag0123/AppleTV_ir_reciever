Command: ninja all
[1/11] Performing build step for 'bootloader'
[1/1] cd "/Users/jude/Documents/Embedded Project/Acton Activator/ir_reciever/build/bootloader/esp-idf/esptool_py" && /Users/jude/.espressif/python_env/idf5.5_py3.13_env/bin/python /Users/jude/LocalStorage/SDK/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x1000 /Users/jude/Documents/Embedded\ Project/Acton\ Activator/ir_reciever/build/bootloader/bootloader.bin
Bootloader binary size 0x6680 bytes. 0x980 bytes (8%) free.
[2/11] No install step for 'bootloader'
[3/11] Completed 'bootloader'
[4/11] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/main.c.obj
[5/11] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/led.c.obj
[6/11] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/ir.c.obj
[7/11] Linking C static library esp-idf/main/libmain.a
[8/11] Generating esp-idf/esp_system/ld/sections.ld
[9/11] Linking CXX executable ir_reciever.elf
[10/11] Generating binary image from built executable
esptool.py v4.9.dev6
Creating esp32 image...
Merged 2 ELF sections
Successfully created esp32 image.
Generated /Users/jude/Documents/Embedded Project/Acton Activator/ir_reciever/build/ir_reciever.bin
[11/11] cd "/Users/jude/Documents/Embedded Project/Acton Activator/ir_reciever/build/esp-idf/esptool_py" && /Users/jude/.espressif/python_env/idf5.5_py3.13_env/bin/python /Users/jude/LocalStorage/SDK/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 partition --type app /Users/jude/Documents/Embedded\ Project/Acton\ Activator/ir_reciever/build/partition_table/partition-table.bin /Users/jude/Documents/Embedded\ Project/Acton\ Activator/ir_reciever/build/ir_reciever.bin
ir_reciever.bin binary size 0x31da0 bytes. Smallest app partition is 0x100000 bytes. 0xce260 bytes (81%) free.
